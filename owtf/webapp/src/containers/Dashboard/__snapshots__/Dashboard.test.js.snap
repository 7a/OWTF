// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard component Testing GithubReport component Should render without errors 1`] = `
<div
  className="githubReportComponentContainer"
  data-test="githubReportComponent"
>
  <button
    className="githubReportComponentContainer__reportButton pull-right"
    onClick={[Function]}
  >
    <span>
      <BsGithub />
    </span>
    Report Errors on GitHub
  </button>
  <div
    className="dialogWrapper"
  >
    <Dialog
      isDialogOpened={false}
      onClose={[Function]}
      title="Errors"
    >
      <div
        className="githubReportComponentContainer__errorSelectionContainer"
      >
        <strong>
          Select an Error:
        </strong>
        <div
          className="githubReportComponentContainer__errorSelectionContainer__dropdownMenuContainer"
        >
          <select
            onChange={[Function]}
            value="-1"
          >
            <option
              value={-1}
            >
              ---Select Error---
            </option>
            <option
              key="0"
              value="0"
            >
              Error 1
            </option>
          </select>
        </div>
      </div>
    </Dialog>
  </div>
</div>
`;

exports[`Dashboard component Testing Severity chart component Should render without errors 1`] = `
<Pie
  data={
    Object {
      "datasets": Array [
        Object {
          "backgroundColor": Array [
            "#A9A9A9",
          ],
          "data": Array [
            100,
          ],
        },
      ],
      "labels": Array [
        "Test label",
      ],
    }
  }
  height={60}
  options={
    Object {
      "legend": Object {
        "display": true,
        "position": "left",
      },
      "maintainAspectRatio": false,
      "title": Object {
        "display": false,
      },
    }
  }
  width={60}
/>
`;

exports[`Dashboard component Testing Vulnerability panel component Should render without errors 1`] = `
<Bar
  data={
    Object {
      "datasets": Array [
        Object {
          "backgroundColor": Array [
            "#c275f5",
            "#ff7a7a",
            "#f2f67e",
            "#a3d3ff",
            "#53b0ee",
            "#85D262 ",
          ],
          "data": Array [
            0,
          ],
          "label": "Severity",
        },
      ],
      "labels": Array [
        "Test label",
      ],
    }
  }
  height={270}
  options={
    Object {
      "legend": Object {
        "display": false,
        "position": "right",
      },
      "maintainAspectRatio": false,
      "title": Object {
        "display": false,
        "fontSize": 40,
        "text": "Current Vulnerabilities",
      },
    }
  }
/>
`;

exports[`Dashboard component Testing Worker panel component Should render without errors 1`] = `
<div
  className="workerPanelComponentContainer"
  data-test="workerPanelComponent"
>
  <div
    className="workerPanelComponentContainer__progressbarContainer"
  >
    <ProgressBar
      pollInterval={1300}
      progressData={
        Object {
          "complete_count": 6,
          "left_count": 280,
        }
      }
    />
  </div>
  <div
    className="workerPanelComponentContainer__workerLegendContainer"
  >
    <WorkerLegend
      onFetchWorkerLogs={[MockFunction]}
      pollInterval={1300}
      workerData={
        Array [
          Object {
            "busy": false,
            "id": 4,
            "name": "Worker-4",
            "paused": false,
            "work": Array [],
            "worker": 29693,
          },
        ]
      }
      workerLogs={false}
    />
  </div>
</div>
`;

exports[`Dashboard component Testing Worker panel component Testing progress bar component Should render without errors 1`] = `
<Progress
  className=""
  gapPosition="top"
  height={280}
  percent={60}
  prefixCls="rc-progress"
  strokeColor="#FE8C6A"
  strokeLinecap="round"
  strokeWidth="5"
  style={Object {}}
  trailColor="#D9D9D9"
  trailWidth={1}
/>
`;

exports[`Dashboard component Testing Worker panel component Testing worker component Should render without errors 1`] = `
<div
  className="workerPanelComponentContainer__workerLegendContainer__workerComponentWrapper__workerComponent"
  data-test="workerComponent"
>
  <div
    className="workerPanelComponentContainer__workerLegendContainer__workerComponentWrapper__workerComponent__workContainer"
  >
    <img
      className="workerpanel-labelimg"
      src={
        Object {
          "default": "",
        }
      }
    />
    <p>
      Worker 4 - Not Running 
    </p>
    <button
      onClick={[Function]}
    >
      Log
    </button>
  </div>
  <Dialog
    isDialogOpened={false}
    onClose={[Function]}
    title="Worker-Log"
  >
    <div
      className="workerPanelComponentContainer__workerLegendContainer__workerComponentWrapper__workerComponent__workerLogContainer"
    >
      <textarea
        cols={50}
        disabled={true}
        rows={20}
        value="Nothing to show here!"
      />
    </div>
  </Dialog>
</div>
`;

exports[`Dashboard component Testing Worker panel component Testing worker legend component Should render without errors 1`] = `
<div
  className="workerPanelComponentContainer__workerLegendContainer__workerComponentWrapper"
  data-test="workerLegendComponent"
>
  <div
    key="4"
  >
    <Worker
      data={
        Object {
          "busy": false,
          "id": 4,
          "name": "Worker-4",
          "paused": false,
          "work": Array [],
          "worker": 29693,
        }
      }
      onFetchWorkerLogs={[MockFunction]}
      workerLogs={false}
    />
  </div>
</div>
`;

exports[`Dashboard component Testing dumb Dashboard component Should render without errors 1`] = `
<div
  className="dashboardContainer"
  data-test="dashboardComponent"
>
  <div
    className="dashboardContainer__headerContainer"
  >
    <div
      className="dashboardContainer__headerContainer__headingContainer"
    >
      <h2>
        Welcome to OWTF,
      </h2>
      <small>
        this is your dashboard
      </small>
    </div>
    <div
      className="dashboardContainer__dashboardHeaderContainer__reportButtonContainer"
    >
      <GithubReport
        errors={
          Array [
            Object {
              "github_issue_url": null,
              "id": 1,
              "owtf_message": "Test message",
              "reported": false,
              "traceback": "Test traceback",
              "user_message": null,
            },
          ]
        }
        onDeleteError={[MockFunction]}
      />
    </div>
  </div>
  <div
    className="dashboardContainer__vulnerabilitiesContainer"
  >
    <h2
      className="dashboardContainer__vulnerabilitiesContainer__heading"
    >
      Current Vulnerabilities
    </h2>
    <hr />
    <VulnerabilityPanel
      panelData={
        Array [
          Object {
            "id": 5,
            "label": "Test label",
            "value": 0,
          },
        ]
      }
    />
  </div>
  <div
    className="dashboardContainer__sectionsContainer"
  >
    <div
      className="dashboardContainer__sectionsContainer__workersContainer"
    >
      <h2
        className="dashboardContainer__sectionsContainer__workersContainer__heading"
      >
        Worker Panel
      </h2>
      <hr />
      <WorkerPanel
        onFetchWorkerLogs={[MockFunction]}
        pollInterval={13000}
        progressData={
          Object {
            "complete_count": 6,
            "left_count": 280,
          }
        }
        workerData={Array []}
        workerLogs="Test logs"
      />
    </div>
    <div
      className="dashboardContainer__sectionsContainer__previousTargetsAnalyticsContainer"
    >
      <h2
        className="dashboardContainer__sectionsContainer__previousTargetsAnalyticsContainer__heading"
      >
        Previous Targets Analytics
      </h2>
      <hr />
      <Chart
        chartData={
          Array [
            Object {
              "color": "#A9A9A9",
              "id": 0,
              "label": "Test label",
              "value": 100,
            },
          ]
        }
      />
    </div>
  </div>
</div>
`;
