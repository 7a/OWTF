// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Targets Page component Testing dumb TargetPage component Should render without errors 1`] = `
<div
  data-test="targetsPageComponent"
>
  <div
    className="targetsPageContainer"
  >
    <div
      className="targetsPageContainer__addTargetsContainer"
      id="add_targets"
    >
      <h2
        color="#0788DE"
        size={700}
      >
        Add Targets
      </h2>
      <textarea
        cols="230"
        name="newTargetUrls"
        onChange={[Function]}
        placeholder="Input targets seperated by new line"
        rows="5"
        value=""
      />
      <button
        appearance="primary"
        data-test="addTargetButton"
        disabled={false}
        marginTop={10}
        onClick={[Function]}
      >
        <FiTarget />
        Add Targets
      </button>
      <Connect(Plugins)
        handleAlertMsg={[Function]}
        handlePluginClose={[Function]}
        pluginShow={false}
        resetTargetState={[Function]}
        selectedTargets={Array []}
      />
    </div>
    <div
      className="targetsPageContainer__targetsContainer"
    >
      <div
        className="targetsPageContainer__targetsContainer__toolbarContainer"
      >
        <div
          className="targetsPageContainer__targetsContainer__toolbarContainer__headingConatiner"
        >
          <h2>
            Targets
          </h2>
        </div>
        <div
          style={
            Object {
              "display": "flex",
            }
          }
        >
          <div
            className="targetsPageContainer__targetsContainer__toolbarContainer__sessionsContainer"
          >
            <Connect(Sessions) />
          </div>
          <div
            className="targetsPageContainer__targetsContainer__toolbarContainer__buttonsContainer"
          >
            <button
              className="targetsPageContainer__targetsContainer__toolbarContainer__buttonsContainer__exportButton"
              onClick={[Function]}
            >
              <FaDownload />
              Export
            </button>
            <button
              className="targetsPageContainer__targetsContainer__toolbarContainer__buttonsContainer__runButton"
              data-test="pluginButton"
              onClick={[Function]}
            >
              <FaHammer />
              Run
            </button>
          </div>
        </div>
      </div>
      <div
        alignItems="center"
        display="flex"
        height={400}
        justifyContent="center"
      >
        Loading.standard();
      </div>
      <Connect(TargetsTable)
        getCurrentSession={[Function]}
        handleAlertMsg={[Function]}
        handlePluginShow={[Function]}
        targets={Array []}
        updateSelectedTargets={[Function]}
      />
    </div>
  </div>
</div>
`;

exports[`Targets Page component Testing dumb TargetsTable component Should render without errors 1`] = `
<Table
  data-test="targetsTableComponent"
  marginTop={20}
>
  <TableHead
    accountForScrollbar={true}
    height={50}
  >
    <SearchTableHeaderCell
      flexGrow={3}
      flexShrink={0}
      icon={
        Object {
          "$$typeof": Symbol(react.memo),
          "compare": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
        }
      }
      onChange={[Function]}
      placeholder="URL"
      spellCheck={true}
      value=""
    />
    <TextTableHeaderCell>
      <Popover
        animationDuration={300}
        bringFocusInside={false}
        content={[Function]}
        minHeight={40}
        minWidth={200}
        onBodyClick={[Function]}
        onClose={[Function]}
        onCloseComplete={[Function]}
        onOpen={[Function]}
        onOpenComplete={[Function]}
        position="bottom-left"
        shouldCloseOnExternalClick={true}
        trigger="click"
      >
        <withTheme(TextDropdownButton)
          icon="caret-down"
        >
          Severity
        </withTheme(TextDropdownButton)>
      </Popover>
    </TextTableHeaderCell>
    <TextTableHeaderCell>
      Actions
    </TextTableHeaderCell>
  </TableHead>
  <TableVirtualBody
    allowAutoHeight={false}
    defaultHeight={48}
    height={500}
    overscanCount={5}
    useAverageAutoHeightEstimation={true}
  >
    <withTheme(Pane)>
      <withTheme(TableRow)
        height={75}
        key="6"
      >
        <withTheme(TableCell)
          flexGrow={3}
          flexShrink={0}
        >
          <withTheme(Pane)
            alignItems="center"
            display="flex"
            flexDirection="row"
          >
            <withTheme(Checkbox)
              checked={false}
              id="http://fb.com"
              margin={10}
              onChange={[Function]}
            />
            <withTheme(Link)
              href="/targets/6"
              size={500}
            >
               
              http://fb.com
               (
              157.240.16.35
              )
            </withTheme(Link)>
          </withTheme(Pane)>
        </withTheme(TableCell)>
        <TextTableCell
          isNumber={false}
        >
          <withTheme(Badge)
            color="orange"
          >
            Medium
          </withTheme(Badge)>
        </TextTableCell>
        <withTheme(TableCell)>
          <Popover
            animationDuration={300}
            bringFocusInside={false}
            content={[Function]}
            data-test="actionsPopover"
            minHeight={40}
            minWidth={200}
            onBodyClick={[Function]}
            onClose={[Function]}
            onCloseComplete={[Function]}
            onOpen={[Function]}
            onOpenComplete={[Function]}
            position="bottom-right"
            shouldCloseOnExternalClick={true}
            trigger="click"
          >
            <withTheme(IconButton)
              appearance="minimal"
              height={24}
              icon="more"
            />
          </Popover>
        </withTheme(TableCell)>
      </withTheme(TableRow)>
    </withTheme(Pane)>
  </TableVirtualBody>
</Table>
`;
