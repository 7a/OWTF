apiVersion: apps/v1
kind: Deployment
metadata:
  name: owtf
  namespace: owtf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: owtf
  template:
    metadata:
      labels:
        app: owtf
    spec:
      initContainers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:latest
        env:
          - name: DOCKER_CONFIG
            value: /root/.docker/
        args:
          - "--dockerfile=/infra/kubernetes/Dockerfile"          
          - "--context=git://github.com/owtf/owtf#develop"
          - "--destination=username/image:tag"
          - "--compressed-caching=false"
          - "--ignore-path=/product_uuid"
        volumeMounts:
          - name: kaniko-secret
            mountPath: /root
      containers:
      - name: owtf
        image: username/image:tag
        command: ["owtf"]
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: db
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: host
        ports:
        - containerPort: 8008
        - containerPort: 8010
        - containerPort: 8009
        volumeMounts:
        - name: owtf-volume
          mountPath: /owtf
      restartPolicy: Always
      volumes:
      - name: owtf-volume
        persistentVolumeClaim:
          claimName: owtf-pvc
      - name: kaniko-secret
        secret:
          secretName: regcred 
          items:
            - key: .dockerconfigjson
              path: .docker/config.json            
